import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, ScrollView, ActivityIndicator, Button, ToastAndroid, TouchableOpacity } from 'react-native';
import axios from 'axios';
import AsyncStorage from '@react-native-async-storage/async-storage'; // –ò–º–ø–æ—Ä—Ç AsyncStorage
import { Animated } from 'react-native';

export default function FilmDetailScreen({ route }) {
  const { filmId } = route.params;
  const [film, setFilm] = useState(null);
  const [loading, setLoading] = useState(true);
  const [liked, setLiked] = useState(false);
  const fadeAnim = useState(new Animated.Value(0))[0];  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏

  useEffect(() => {
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 2000,
      useNativeDriver: true,
    }).start();

    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ AsyncStorage
    AsyncStorage.getItem('userId')
      .then(userId => {
        if (userId) {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ
          axios.get(`http://localhost:8080/films/${filmId}`)
            .then(response => {
              setFilm(response.data);
              setLoading(false);
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ª–∞–π–∫–Ω—É–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–Ω–Ω—ã–π —Ñ–∏–ª—å–º
              setLiked(response.data.likedBy.includes(parseInt(userId)));
            })
            .catch(error => {
              console.error(error);
              setLoading(false);
            });
        }
      })
      .catch(error => {
        console.error('Error retrieving user ID:', error);
      });
  }, [filmId]);

  const handleLike = () => {
    AsyncStorage.getItem('userId')
      .then(userId => {
        if (userId) {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ª–∞–π–∫–Ω—É—Ç —Ñ–∏–ª—å–º –∏–ª–∏ –Ω–µ—Ç
          const url = liked ? `http://localhost:8080/films/${filmId}/like/${userId}` : `http://localhost:8080/films/${filmId}/like/${userId}`;
          // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –ª–∞–π–∫–∞
          axios({
            method: liked ? 'delete' : 'put',
            url: url,
          })
            .then(response => {
              setFilm(response.data);
              setLiked(!liked);
              showToast(liked ? '–õ–∞–π–∫ —É–¥–∞–ª–µ–Ω.' : '–õ–∞–π–∫ –¥–æ–±–∞–≤–ª–µ–Ω.');
            })
            .catch(error => {
              console.error('Like action error:', error);
              showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–∞–π–∫–∞.');
            });
        }
      })
      .catch(error => {
        console.error('Error retrieving user ID:', error);
      });
  };

  const showToast = (message) => {
    ToastAndroid.showWithGravity(
      message,
      ToastAndroid.SHORT,
      ToastAndroid.BOTTOM
    );
  };

  if (loading) {
    return (
      <View style={styles.loadingContainer}>
        <ActivityIndicator size="large" color="#0000ff" />
        <Text>–ó–∞–≥—Ä—É–∑–∫–∞...</Text>
      </View>
    );
  }

  if (!film) {
    return (
      <View style={styles.loadingContainer}>
        <Text>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</Text>
      </View>
    );
  }

  return (
    <Animated.ScrollView style={[styles.container, { opacity: fadeAnim }]}>
      <Text style={styles.title}>{film.name}</Text>
      <Text style={styles.sectionTitle}>–û–ø–∏—Å–∞–Ω–∏–µ</Text>
      <Text style={styles.description}>{film.description}</Text>
      <View style={styles.infoContainer}>
        <Text style={styles.infoTitle}>–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:</Text>
        <Text style={styles.infoText}>{film.releaseDate}</Text>
      </View>
      <View style={styles.infoContainer}>
        <Text style={styles.infoTitle}>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</Text>
        <Text style={styles.infoText}>{film.duration} –º–∏–Ω—É—Ç</Text>
      </View>
      <View style={styles.infoContainer}>
        <Text style={styles.infoTitle}>–†–µ–π—Ç–∏–Ω–≥ MPA:</Text>
        <Text style={styles.infoText}>{film.mpa.name}</Text>
      </View>
      <View style={styles.infoContainer}>
        <Text style={styles.infoTitle}>–ñ–∞–Ω—Ä—ã:</Text>
        <Text style={styles.infoText}>{film.genres.map(genre => genre.name).join(', ')}</Text>
      </View>
      <View style={styles.infoContainer}>
        <Text style={styles.infoTitle}>–†–µ–π—Ç–∏–Ω–≥:</Text>
        <Text style={styles.infoText}>{film.rate}</Text>
      </View>
      <View style={styles.likeButtonContainer}>
        <TouchableOpacity onPress={handleLike} style={[styles.likeButton, liked ? styles.liked : styles.notLiked]}>
          <Text style={styles.likeButtonText}>{liked ? 'üëé –£–±—Ä–∞—Ç—å –ª–∞–π–∫' : 'üëç –õ–∞–π–∫'}</Text>
        </TouchableOpacity>
      </View>
    </Animated.ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingHorizontal: 16,
    paddingTop: 16,
    backgroundColor: '#f5f5f5',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 16,
  },
  sectionTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#444',
    marginBottom: 8,
  },
  description: {
    fontSize: 16,
    color: '#666',
    marginBottom: 16,
  },
  infoContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 8,
    paddingVertical: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#ddd',
  },
  infoTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#444',
  },
  infoText: {
    fontSize: 16,
    color: '#666',
  },
  likeButtonContainer: {
    marginTop: 24,
    alignItems: 'center',
  },
  likeButton: {
    paddingVertical: 12,
    paddingHorizontal: 24,
    borderRadius: 25,
  },
  liked: {
    backgroundColor: '#ff6b6b',
  },
  notLiked: {
    backgroundColor: '#4caf50',
  },
  likeButtonText: {
    fontSize: 16,
    color: '#fff',
  },
});
